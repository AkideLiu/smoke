name: Release
on:
  push:
    tags:
      - "v*"

env:
  GHC_VERSION: "8.8.4"

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ github.ref }}
          draft: true

  publish-unix:
    name: Publish
    needs: release
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1
        with:
          ghc-version: ${{ env.GHC_VERSION }}
          enable-stack: true
          stack-no-global: true
      - uses: actions/cache@v2
        with:
          path: ~/.stack/snapshots
          key: v1-${{ matrix.os }}-stack-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
      - run: make smoke.cabal
      - run: make out/build/release/smoke
      - id: asset
        run: |
          export TAG='${{ github.ref }}'
          echo "::set-output name=asset_name::smoke-${TAG##*/}-$(uname -s)-$(uname -m)"
          echo "::set-output name=asset_path::out/build/release/smoke"
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_name: ${{ steps.asset.outputs.asset_name }}
          asset_path: ${{ steps.asset.outputs.asset_path }}
          asset_content_type: application/octet-stream

  publish-windows:
    name: Publish (windows-latest)
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: 'C:\ProgramData\chocolatey\bin'
          key: v1-windows-latest-chocolatey-bin
      - uses: actions/cache@v2
        with:
          path: 'C:\ProgramData\chocolatey\lib'
          key: v1-windows-latest-chocolatey-lib
      - uses: actions/cache@v2
        with:
          path: '${{ env.LOCALAPPDATA }}\Programs\stack'
          key: v1-windows-latest-programs-stack-${{ hashFiles('stack.yaml') }}
          restore-keys: v1-windows-latest-programs-stack-
      - uses: actions/cache@v2
        with:
          path: '${{ env.APPDATA }}\stack'
          key: v1-windows-latest-appdata-stack-${{ hashFiles('stack.yaml') }}
          restore-keys: v1-windows-latest-appdata-stack-
      - run: "choco install --yes --no-progress haskell-stack"
      - run: "stack --no-terminal setup"
      - run: 'New-Item -ItemType Directory -Path .\out\build\release'
      - run: "stack --no-terminal build"
      - run: 'stack --no-terminal install --local-bin-path=.\out\build\release'
      - id: asset
        run: |
          $Tag = '${{ github.ref }}' -replace '.+/', ''
          echo "::set-output name=asset_name::smoke-${Tag}-windows-x64.exe"
          echo '::set-output name=asset_path::out\build\release\smoke.exe'
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_name: ${{ steps.asset.outputs.asset_name }}
          asset_path: ${{ steps.asset.outputs.asset_path }}
          asset_content_type: application/octet-stream
