name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ github.ref }}
          draft: true
      - run: echo "${{ steps.create_release.outputs.upload_url }}" > release_upload_url.txt
      - uses: actions/upload-artifact@v2
        with:
          name: release_upload_url
          path: release_upload_url.txt

  publish-unix:
    name: Release
    needs: release
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1
        with:
          ghc-version: "8.8.3"
          enable-stack: true
          stack-no-global: true
      - uses: actions/cache@v2
        with:
          path: ~/.stack/snapshots
          key: v1-${{ matrix.os }}-stack-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
      - run: make smoke.cabal
      - run: make out/build/release/smoke
      - uses: actions/download-artifact@v2
        with:
          name: release_upload_url
      - id: release
        run: |
          echo ::set-output name=upload_url::"$(cat release_upload_url/release_upload_url.txt)"
      - id: asset
        run: |
          export TAG="${{ github.ref }}"
          export ASSET_NAME="smoke-${TAG##*/}-$(uname -s)-$(uname -m)"
          echo ::set-output name=asset_name::"$ASSET_NAME"
          echo ::set-output name=asset_path::"out/publish/${ASSET_NAME}"
      - run: |
          mkdir -p "$(dirname ${{ steps.asset.outputs.asset_path }})"
          cp out/build/release/smoke ${{ steps.asset.outputs.asset_path }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_name: ${{ steps.asset.outputs.asset_name }}
          asset_path: ${{ steps.asset.outputs.asset_path }}
          asset_content_type: application/octet-stream
