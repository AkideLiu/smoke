name: Release
on:
  push:
    tags:
      - "v*"

env:
  GHC_VERSION: "8.8.4"

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ github.ref }}
          draft: true

  publish-unix:
    name: Release
    needs: release
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1
        with:
          ghc-version: ${{ env.GHC_VERSION }}
          enable-stack: true
          stack-no-global: true
      - uses: actions/cache@v2
        with:
          path: ~/.stack/snapshots
          key: v1-${{ matrix.os }}-stack-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
      - run: make smoke.cabal
      - run: make out/build/release/smoke
      - id: asset
        run: |
          export TAG="${{ github.ref }}"
          echo "::set-output name=asset_name::smoke-${TAG##*/}-$(uname -s)-$(uname -m)"
          echo "::set-output name=asset_path::out/build/release/smoke"
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_name: ${{ steps.asset.outputs.asset_name }}
          asset_path: ${{ steps.asset.outputs.asset_path }}
          asset_content_type: application/octet-stream
